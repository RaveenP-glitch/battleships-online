services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: battleships-db
    environment:
      POSTGRES_DB: battleships
      POSTGRES_USER: battleships_user
      POSTGRES_PASSWORD: battleships_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U battleships_user -d battleships"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - battleships-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: battleships-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://battleships_user:battleships_password@postgres:5432/battleships
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      SESSION_SECRET: ${SESSION_SECRET:-your-session-secret-key-change-this-in-production}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - battleships-network
    restart: unless-stopped

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://backend:3001
        DOCKER_ENV: "true"
    container_name: battleships-frontend
    environment:
      NODE_ENV: production
      DOCKER_ENV: "true"
      NEXT_PUBLIC_API_URL: http://backend:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - battleships-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  battleships-network:
    driver: bridge 